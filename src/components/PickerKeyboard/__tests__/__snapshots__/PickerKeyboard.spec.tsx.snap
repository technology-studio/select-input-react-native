// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PickerKeyboard rendering renders correctly with given props 1`] = `
<Modal
  animationType="slide"
  hardwareAccelerated={false}
  onOrientationChange={[Function]}
  supportedOrientations={
    [
      "portrait",
      "landscape",
      "landscape-left",
      "landscape-right",
    ]
  }
  transparent={true}
  visible={true}
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessible={true}
    focusable={false}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "flex-end",
      }
    }
  >
    <View
      style={
        [
          {
            "alignItems": "center",
            "backgroundColor": "#F5FCFF",
            "justifyContent": "center",
            "padding": 0,
          },
          {
            "width": 750,
          },
        ]
      }
    >
      <View
        style={
          [
            {
              "backgroundColor": "#CCCFD6",
              "borderBottomWidth": 0,
              "borderColor": "#CCCFD6",
              "borderTopColor": "lightgrey",
              "borderTopWidth": 0.5,
              "flexDirection": "row",
              "justifyContent": "space-between",
              "padding": 0,
            },
            undefined,
            {
              "width": 750,
            },
          ]
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              [
                {
                  "color": "#006BFF",
                  "padding": 8,
                },
                {
                  "color": "#BBBBBB",
                  "fontSize": 13,
                },
                {
                  "textAlign": "left",
                },
              ]
            }
          >
            cancelKeyText
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "opacity": 1,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              [
                {
                  "color": "#006BFF",
                  "padding": 8,
                },
                {
                  "color": "#BBBBBB",
                  "fontSize": 13,
                },
                {
                  "textAlign": "right",
                },
              ]
            }
          >
            submitKeyText
          </Text>
        </View>
      </View>
      <View>
        <View
          style={
            [
              {
                "backgroundColor": "#FFFFFF",
              },
              {
                "backgroundColor": "#CCCCCC",
              },
              {
                "width": 750,
              },
            ]
          }
        >
          <RNCPicker
            items={
              [
                {
                  "label": "0",
                  "testID": undefined,
                  "textColor": undefined,
                  "value": "0",
                },
              ]
            }
            numberOfLines={1}
            onChange={[Function]}
            selectedIndex={0}
            style={
              [
                {
                  "height": 216,
                },
                undefined,
              ]
            }
          />
        </View>
      </View>
    </View>
  </View>
</Modal>
`;
